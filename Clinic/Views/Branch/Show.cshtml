@model Clinic.Models.BranchDto

@{
    ViewData["Title"] = "Branch Details";
    var branchEntity = ViewBag.BranchEntity as Clinic.Models.Branches;
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">Branches /</span> Branch Details
    </h4>

    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bx bx-buildings me-2"></i>@Model.Name
                    </h5>
                    <div>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-sm">
                            <i class="bx bx-edit me-1"></i>Edit
                        </a>
                        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger btn-sm">
                            <i class="bx bx-trash me-1"></i>Delete
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">Branch ID:</dt>
                        <dd class="col-sm-9">
                            <span class="badge bg-primary">#@Model.Id</span>
                        </dd>

                        <dt class="col-sm-3">Branch Name:</dt>
                        <dd class="col-sm-9"><strong>@Model.Name</strong></dd>

                        <dt class="col-sm-3">Address:</dt>
                        <dd class="col-sm-9">
                            @if (!string.IsNullOrEmpty(Model.Address))
                            {
                                <address class="mb-0">
                                    @Html.Raw(Model.Address.Replace("\n", "<br>"))
                                </address>
                            }
                            else
                            {
                                <span class="text-muted">No address specified</span>
                            }
                        </dd>

                        <dt class="col-sm-3">Total Appointments:</dt>
                        <dd class="col-sm-9">
                            <span class="badge bg-info fs-6">@Model.AppointmentCount</span>
                        </dd>
                    </dl>
                </div>
            </div>

            @if (branchEntity?.Appointments != null && branchEntity.Appointments.Any())
            {
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bx bx-calendar me-2"></i>Recent Appointments
                        </h5>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Patient</th>
                                    <th>Reason</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var appointment in branchEntity.Appointments.OrderByDescending(a => a.AppointmentDate).Take(10))
                                {
                                    <tr>
                                        <td>@appointment.AppointmentDate.ToString("MMM dd, yyyy HH:mm")</td>
                                        <td>
                                            @if (appointment.User != null)
                                            {
                                                <strong>@appointment.User.FirstName @appointment.User.LastName</strong>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Unknown Patient</span>
                                            }
                                        </td>
                                        <td>@(appointment.Reason ?? "No reason specified")</td>
                                        <td>
                                            @if (appointment.AppointmentDate > DateTime.Now)
                                            {
                                                <span class="badge bg-success">Scheduled</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Completed</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-body">
                    <h6 class="card-title">
                        <i class="bx bx-stats me-2"></i>Branch Statistics
                    </h6>

                    <div class="d-flex justify-content-between mb-3">
                        <span>Total Appointments:</span>
                        <strong>@Model.AppointmentCount</strong>
                    </div>

                    @if (branchEntity?.Appointments != null && branchEntity.Appointments.Any())
                    {
                        <div class="d-flex justify-content-between mb-3">
                            <span>Upcoming:</span>
                            <strong class="text-success">@branchEntity.Appointments.Count(a => a.AppointmentDate > DateTime.Now)</strong>
                        </div>

                        <div class="d-flex justify-content-between mb-3">
                            <span>Completed:</span>
                            <strong class="text-secondary">@branchEntity.Appointments.Count(a => a.AppointmentDate <= DateTime.Now)</strong>
                        </div>

                        <div class="d-flex justify-content-between">
                            <span>This Month:</span>
                            <strong class="text-info">@branchEntity.Appointments.Count(a => a.AppointmentDate.Month == DateTime.Now.Month && a.AppointmentDate.Year == DateTime.Now.Year)</strong>
                        </div>
                    }
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h6 class="card-title">
                        <i class="bx bx-cog me-2"></i>Quick Actions
                    </h6>

                    <div class="d-grid gap-2">
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">
                            <i class="bx bx-edit me-2"></i>Edit Branch
                        </a>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bx bx-list-ul me-2"></i>All Branches
                        </a>
                        <a asp-controller="Appointment" asp-action="Index" asp-route-branchId="@Model.Id" class="btn btn-outline-info">
                            <i class="bx bx-calendar me-2"></i>View Appointments
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        box-shadow: 0 2px 6px 0 rgba(67, 89, 113, 0.12);
        border-radius: 0.375rem;
    }

    .btn-primary {
        background-color: #087830;
        border-color: #087830;
    }

        .btn-primary:hover {
            background-color: #0a5d29;
            border-color: #0a5d29;
        }

    .table th {
        background-color: #f8f9fa;
        border-top: none;
        font-weight: 600;
        color: #566a7f;
    }

    .badge {
        font-size: 0.75rem;
    }

    address {
        font-style: normal;
        line-height: 1.5;
    }
</style>